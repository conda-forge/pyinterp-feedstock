{% set name = "pyinterp" %}
{% set version = "2023.2.1" %}
{% set build = 1 %}

# recipe-lint fails if blas is undefined
{% set blas = blas or "openblas" %}
{% if blas == "openblas" %}
# prioritize openblas via build number
{% set build = build + 100 %}
{% endif %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/CNES/pangeo-{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: bfaaf0a963627ed516d5db08c3516299736b88e0b70c20d9406d0673d18cccda

build:
  {% if blas == "openblas" %}
  {% set mkl_option = "no" %}
  {% else %}
  {% set mkl_option = "yes" %}
  {% endif %}
  number: {{ build }}
  {% if target_platform == "win-64" %}
  script: {{ PYTHON }} -m pip install . -vv --global-option=build_ext --global-option="--mkl={{ mkl_option }}" --global-option="--conda-forge" --global-option="--generator='Visual Studio 17 2022'"
  {% else %}
  script: {{ PYTHON }} -m pip install . -vv --global-option=build_ext --global-option="--mkl={{ mkl_option }}" --global-option="--conda-forge"
  {% endif %}
  skip: true  # [linux32 or win32 or py<36 or (arm64 and blas != "openblas")]

  {% if blas == "openblas" %}
  {% set blas_prefix = "openblas" %}
  {% else %}
  {% set blas_prefix = "mkl" %}
  {% endif %}
  string: {{ blas_prefix }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}

  ignore_run_exports:
    - mkl                                 # [blas == "mkl"]
    - openblas                            # [blas == "openblas"]
    - gsl                                 # [linux or osx]

requirements:
  build:
    - python                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - setuptools                          # [build_platform != target_platform]
    - {{ compiler('cxx') }}               # [linux or osx]
    - vs2017_win-64                       # [win]
    - cmake
    - make                                # [linux]
  host:
    - dask
    - eigen
    - gsl >=2.7
    - boost-cpp >=1.79.0
    - mkl-devel                           # [blas == "mkl"]
    - openblas                            # [blas == "openblas"]
    - numpy
    - pip
    - pytest
    - python
    - setuptools
    - xarray
  run:
    - {{ pin_compatible('numpy') }}
    - dask
    - mkl *                               # [blas == "mkl"]
    - openblas *                          # [blas == "openblas"]
    - python
    - xarray

test:
  requires:
    - pytest
  commands:
    - pytest --pyargs pyinterp

about:
  home: https://github.com/CNES/pangeo-pyinterp
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Python library for optimized geo-referenced interpolation

  description: |
    Tools for interpolating geo-referenced data used in the field of
    geosciences. There are other libraries that cover this problem, but written
    entirely in Python, the performance of these projects was not quite
    sufficient for our needs. That is why this project was created.
  doc_url: https://pangeo-pyinterp.readthedocs.io/
  dev_url: https://github.com/CNES/pangeo-pyinterp

extra:
  recipe-maintainers:
    - fbriol
